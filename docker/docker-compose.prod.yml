services:
  mongo:
    image: mongo:5
    container_name: ns_mongo_prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ns_case
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-changeme}
    volumes:
      - mongo_data_prod:/data/db
    networks:
      - ns_network_prod

  redis:
    image: redis:7-alpine
    container_name: ns_redis_prod
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    networks:
      - ns_network_prod

  api:
    build:
      context: ../
      dockerfile: docker/Dockerfile.api
      target: production
    container_name: ns_api_prod
    restart: always
    ports:
      - "3001:3001"
    environment:
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-changeme}@mongo:27017/ns_case?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-changeme}@redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=production
    depends_on:
      - mongo
      - redis
    networks:
      - ns_network_prod

  web:
    build:
      context: ../
      dockerfile: docker/Dockerfile.web
      target: production
    container_name: ns_web_prod
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NODE_ENV=production
    depends_on:
      - api
    networks:
      - ns_network_prod

networks:
  ns_network_prod:
    driver: bridge

volumes:
  mongo_data_prod: