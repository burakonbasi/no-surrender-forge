# Development stage
FROM node:20-alpine AS development

RUN apk add --no-cache libc6-compat
RUN corepack enable && corepack prepare pnpm@8.15.6 --activate

WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/api/package.json ./apps/api/
COPY packages/common/package.json ./packages/common/

# Install all dependencies
RUN pnpm install --frozen-lockfile

# Copy source files
COPY . .

# Expose port
EXPOSE 3001

# Development command
CMD ["pnpm", "--filter", "@no-surrender/api", "dev"]

# Production build stage
FROM node:20-alpine AS builder

RUN apk add --no-cache libc6-compat
RUN corepack enable && corepack prepare pnpm@8.15.6 --activate

WORKDIR /app

# Copy all files
COPY . .

# Install and build
RUN pnpm install --frozen-lockfile
RUN pnpm --filter @no-surrender/api... build

# Production stage
FROM node:20-alpine AS production

RUN apk add --no-cache libc6-compat
RUN corepack enable && corepack prepare pnpm@8.15.6 --activate

WORKDIR /app

# Copy necessary files
COPY --from=builder /app/package.json /app/pnpm-lock.yaml /app/pnpm-workspace.yaml ./
COPY --from=builder /app/apps/api/package.json ./apps/api/
COPY --from=builder /app/packages/common/package.json ./packages/common/

# Install production dependencies
RUN pnpm install --prod --frozen-lockfile

# Copy built application
COPY --from=builder /app/apps/api/.next ./apps/api/.next
COPY --from=builder /app/apps/api/public ./apps/api/public
COPY --from=builder /app/packages ./packages

WORKDIR /app/apps/api

EXPOSE 3001

CMD ["pnpm", "start"]